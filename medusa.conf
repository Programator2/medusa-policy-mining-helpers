tree	"fs" clone of file by getfile getfile.filename;
primary tree "fs";
tree	"domain" of process;

space all_domains = recursive "domain";
space all_files	= recursive "/";

all_domains     ENTER   all_domains,
		READ    all_domains, all_files,
		WRITE   all_domains, all_files,
		SEE     all_domains, all_files;

function log
{
	local printk buf.message=$1 + "\n";
	update buf;
}

* getprocess * {
	log("this process came: " + process.cmdline + " (" + process.pid + ")");
	enter(process, @"domain/init");
        process.med_sact = 0x3fffffff;
	if (process.cmdline == "/usr/sbin/mariadbd" || process.cmdline == "(mariadbd)") {
		process.audit = 1;
		log("auditing: " + process.cmdline + " (" + process.pid + ") parent: " + parent.cmdline + " (" + parent.pid + ")");
	}
	if (parent.audit == 1) {
		process.audit = 1;
		log("auditing: " + process.cmdline + " (" + process.pid + ") because of parent " +
		parent.cmdline + " (" + parent.pid + ")");
	}
	return ALLOW;
}

* pexec * {
	log("star pexec cmdline=" + process.cmdline + " (" + process.pid + ") filename=" + pexec.filename);
	if (pexec.filename == "{{{entry_path}}}") {
		process.audit = 1;
		log("auditing from pexec: " + process.cmdline + " (" + process.pid + ") parent:  (" + process.parent_pid + ")");
	}
	return ALLOW;
}

function _init
{
}
